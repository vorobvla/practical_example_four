/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


import Model.Game;
import Model.GameException;
import Model.Player;
import Networking.Networking;
import edu.cvut.vorobvla.bap.GameStateEnum;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author Vladimir Vorobyev (vorobvla)
 */
public class MainFrame extends javax.swing.JFrame {
    
    
    private ScheduledThreadPoolExecutor scheduler;

    /**
     * Creates new form MainJFrame
     */
    public MainFrame() {
        //setup icon
        try {
            setIconImage(ImageIO.read(getClass().getResource("/resources/Icon.png")));
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.err.println("could not find icon resource");
        }
        scheduler = new ScheduledThreadPoolExecutor(1);
        scheduler.setExecuteExistingDelayedTasksAfterShutdownPolicy(true);
        initComponents();
        initComponentsNotGenerated();        
        startPanel.launchPlayerRefresh(scheduler);

      //  Networking.getInstance().callPlayers();
        setTitle("Moderator App Prototype");
        showCard("startTabbedPanel");
        
        //setup action sources & listeners
        startPanel.getSetupGameButton().setEnabled(false);
        startPanel.getSetupSystemButton().setEnabled(false);
        startPanel.getSetupNetworkButton().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                setupNetworkActionPerfomed();
            }
        });
        startPanel.getStartGameButton().addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                startGameButtonActionPerformed();
            }           
        });
        
        gamePanel.getFinishBtn().addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                endGame();
            }

            
        });
        
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                try {
                    Networking.getInstance().close(); 
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                super.windowClosing(e);
            }          
        });
    }
    
    //reset game & exit to main menu
    private void endGame() {
        if (Game.getState() == GameStateEnum.FINISH){
         //   Game.getInstance().reset();
            showCard("startTabbedPanel");
        }
    }
    
    //switch to Game
    private void startGameButtonActionPerformed() {
        try {
            gamePanel.startGame(Player.getAll());
        } catch (GameException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        showCard("gamePanel");
    }
    
    //switch to network settongs
    private void setupNetworkActionPerfomed() {
        tabbedPane.setSelectedComponent(networkPanel);
    }
    
    //switch to cared ragged with "name"
    private static void showCard(String name){
        ((CardLayout)mainPanel.getLayout()).show(mainPanel, name);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        startPanel = new GUI.StartPanel();
        networkPanel = new GUI.NetworkPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        mainPanel.setLayout(new java.awt.CardLayout());

        tabbedPane.addTab("Start Panel", startPanel);
        tabbedPane.addTab("Network Settings", networkPanel);

        /*

        mainPanel.add(tabbedPane, "card3");
        */
        mainPanel.add(tabbedPane, "startTabbedPanel");

        getContentPane().add(mainPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //my own initcomponents()
    final void initComponentsNotGenerated(){
        gamePanel = new GamePanel();
        mainPanel.add(gamePanel, "gamePanel");
        pack();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    public ScheduledThreadPoolExecutor getScheduler() {
        return scheduler;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel mainPanel;
    private GUI.NetworkPanel networkPanel;
    private GUI.StartPanel startPanel;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
    //not generated vars declaration
    private GUI.GamePanel gamePanel;
}
